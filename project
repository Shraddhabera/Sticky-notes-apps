<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sticky Notes App</title>
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #e8f0fe;
      margin: 0;
      padding: 20px;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 20px;
    }
    #app-container {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 10px;
    }
    #searchBar, #addNoteBtn, #shapeSelector {
      padding: 10px 15px;
      border: none;
      border-radius: 8px;
      outline: none;
    }
    #searchBar {
      width: 300px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    #addNoteBtn {
      background-color: #007bff;
      color: white;
      cursor: pointer;
      transition: background 0.3s;
    }
    #addNoteBtn:hover {
      background-color: #0056b3;
    }
    .note {
      background-color: #fff8b5;
      padding: 15px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      width: 220px;
      min-height: 150px;
      position: absolute;
      cursor: move;
      transition: transform 0.2s;
    }
    .note.circle {
      border-radius: 50%;
      width: 150px;
      height: 150px;
    }
    .note.ellipse {
      border-radius: 50%;
      width: 220px;
      height: 120px;
    }
    .note.rectangle {
      border-radius: 12px;
    }
    .note:hover {
      transform: scale(1.02);
    }
    .note textarea {
      width: 100%;
      height: 100px;
      border: none;
      background: transparent;
      resize: none;
      outline: none;
      font-size: 14px;
    }
    .note button {
      position: absolute;
      top: 8px;
      right: 8px;
      background-color: #ff4b5c;
      color: white;
      border: none;
      border-radius: 50%;
      padding: 5px 8px;
      cursor: pointer;
      transition: background 0.3s;
    }
    .note button:hover {
      background-color: #c9303e;
    }
    .color-picker {
      position: absolute;
      bottom: 8px;
      left: 8px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="app-container">
    <input type="text" id="searchBar" placeholder="Search notes...">
    <select id="shapeSelector">
      <option value="rectangle">Rectangle</option>
      <option value="circle">Circle</option>
      <option value="ellipse">Ellipse</option>
    </select>
    <button id="addNoteBtn">+ Add Note</button>
  </div>

  <script>
    const addNoteBtn = document.getElementById('addNoteBtn');
    const searchBar = document.getElementById('searchBar');
    const shapeSelector = document.getElementById('shapeSelector');

    function saveNotes() {
      const notes = document.querySelectorAll('.note');
      const data = [];
      notes.forEach(note => {
        data.push({
          text: note.querySelector('textarea').value,
          color: note.querySelector('.color-picker').value,
          shape: note.dataset.shape,
          top: note.style.top,
          left: note.style.left
        });
      });
      localStorage.setItem('notes', JSON.stringify(data));
    }

    function addNote(text = '', color = '#fff8b5', shape = 'rectangle', top = '20px', left = '20px') {
      const note = document.createElement('div');
      note.classList.add('note', shape);
      note.style.backgroundColor = color;
      note.style.top = top;
      note.style.left = left;
      note.dataset.shape = shape;

      note.innerHTML = `
        <button onclick="deleteNote(this)">Ã—</button>
        <textarea oninput="saveNotes()">${text}</textarea>
        <input type="color" class="color-picker" value="${color}" onchange="changeColor(this)">
      `;

      document.body.appendChild(note);
      makeDraggable(note);
    }

    function deleteNote(button) {
      button.parentElement.remove();
      saveNotes();
    }

    function changeColor(input) {
      input.parentElement.style.backgroundColor = input.value;
      saveNotes();
    }

    function makeDraggable(note) {
      let offsetX, offsetY;

      note.addEventListener('mousedown', function(e) {
        offsetX = e.clientX - note.offsetLeft;
        offsetY = e.clientY - note.offsetTop;
        document.addEventListener('mousemove', moveNote);
        document.addEventListener('mouseup', stopMove);
      });

      function moveNote(e) {
        note.style.left = e.clientX - offsetX + 'px';
        note.style.top = e.clientY - offsetY + 'px';
      }

      function stopMove() {
        document.removeEventListener('mousemove', moveNote);
        document.removeEventListener('mouseup', stopMove);
        saveNotes();
      }
    }

    searchBar.addEventListener('input', function() {
      const query = searchBar.value.toLowerCase();
      document.querySelectorAll('.note').forEach(note => {
        const text = note.querySelector('textarea').value.toLowerCase();
        note.style.display = text.includes(query) ? 'block' : 'none';
      });
    });

    addNoteBtn.addEventListener('click', () => addNote('', '#fff8b5', shapeSelector.value));

    (function loadNotes() {
      const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];
      savedNotes.forEach(noteData => addNote(noteData.text, noteData.color, noteData.shape, noteData.top, noteData.left));
    })();
  </script>
</body>
</html>
